name: Golangci-lint and Gosec

on:
  push:
    branches:
    - main
    - release-*
  pull_request:
    branches:
    - main
    - release-*

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run GolangCI Linter
        uses: golangci/golangci-lint-action@v3
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: v1.45
          args: --timeout 10m

          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          # args: --issues-exit-code=0

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true then the action will use pre-installed Go.
          # skip-go-installation: true

          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          # skip-build-cache: true
      - name: Install Gosec Security Scanner
        run: curl -sfL https://raw.githubusercontent.com/securego/gosec/v2.8.1/install.sh | sh -s -- -b $(go env GOPATH)/bin v2.8.1
      - name: Run Gosec Security Scanner
        run: gosec ./...
